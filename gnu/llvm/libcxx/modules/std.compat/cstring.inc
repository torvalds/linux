// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

export {
  using ::size_t _LIBCPP_USING_IF_EXISTS;

  using ::memchr _LIBCPP_USING_IF_EXISTS;
  using ::memcmp _LIBCPP_USING_IF_EXISTS;
  using ::memcpy _LIBCPP_USING_IF_EXISTS;
  using ::memmove _LIBCPP_USING_IF_EXISTS;
  using ::memset _LIBCPP_USING_IF_EXISTS;
  using ::strcat _LIBCPP_USING_IF_EXISTS;
  using ::strchr _LIBCPP_USING_IF_EXISTS;
  using ::strcmp _LIBCPP_USING_IF_EXISTS;
  using ::strcoll _LIBCPP_USING_IF_EXISTS;
  using ::strcpy _LIBCPP_USING_IF_EXISTS;
  using ::strcspn _LIBCPP_USING_IF_EXISTS;
  using ::strerror _LIBCPP_USING_IF_EXISTS;
  using ::strlen _LIBCPP_USING_IF_EXISTS;
  using ::strncat _LIBCPP_USING_IF_EXISTS;
  using ::strncmp _LIBCPP_USING_IF_EXISTS;
  using ::strncpy _LIBCPP_USING_IF_EXISTS;
  using ::strpbrk _LIBCPP_USING_IF_EXISTS;
  using ::strrchr _LIBCPP_USING_IF_EXISTS;
  using ::strspn _LIBCPP_USING_IF_EXISTS;
  using ::strstr _LIBCPP_USING_IF_EXISTS;
  using ::strtok _LIBCPP_USING_IF_EXISTS;
  using ::strxfrm _LIBCPP_USING_IF_EXISTS;

} // export
