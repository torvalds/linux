# In python's re.sub patterns, '.' means any character.  If we permitted that
# in a substitution name (and escaped it before recording it as a substitution),
# it would be confusing if someone tried to use the same name in a lit
# configuration file, where the pattern isn't escaped automatically.

# DEFINE: %{foo.bar} = value
# RUN: echo %{foo.bar}

#      CHECK: Substitution name '%{foo.bar}' is malformed {{.*}}
# CHECK-NEXT: in {{DEFINE}}: directive on test line [[#@LINE-4]]

# CHECK: Unresolved: 1 {{\([0-9]*.[0-9]*%\)}}
