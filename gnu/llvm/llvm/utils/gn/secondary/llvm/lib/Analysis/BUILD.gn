static_library("Analysis") {
  output_name = "LLVMAnalysis"
  public_deps = [
    # Must be a public_dep because Analysis's headers include llvm-config.h.
    "//llvm/include/llvm/Config:llvm-config",
  ]
  deps = [
    "//llvm/include/llvm/Config:config",
    "//llvm/lib/BinaryFormat",
    "//llvm/lib/IR",
    "//llvm/lib/ProfileData",
    "//llvm/lib/Support",
    "//llvm/lib/TargetParser",
  ]
  sources = [
    "AliasAnalysis.cpp",
    "AliasAnalysisEvaluator.cpp",
    "AliasSetTracker.cpp",
    "Analysis.cpp",
    "AssumeBundleQueries.cpp",
    "AssumptionCache.cpp",
    "BasicAliasAnalysis.cpp",
    "BlockFrequencyInfo.cpp",
    "BlockFrequencyInfoImpl.cpp",
    "BranchProbabilityInfo.cpp",
    "CFG.cpp",
    "CFGPrinter.cpp",
    "CFGSCCPrinter.cpp",
    "CGSCCPassManager.cpp",
    "CallGraph.cpp",
    "CallGraphSCCPass.cpp",
    "CallPrinter.cpp",
    "CaptureTracking.cpp",
    "CmpInstAnalysis.cpp",
    "CodeMetrics.cpp",
    "ConstantFolding.cpp",
    "ConstraintSystem.cpp",
    "CostModel.cpp",
    "CycleAnalysis.cpp",
    "DDG.cpp",
    "DDGPrinter.cpp",
    "Delinearization.cpp",
    "DemandedBits.cpp",
    "DependenceAnalysis.cpp",
    "DependenceGraphBuilder.cpp",
    "DevelopmentModeInlineAdvisor.cpp",
    "DomConditionCache.cpp",
    "DomPrinter.cpp",
    "DomTreeUpdater.cpp",
    "DominanceFrontier.cpp",
    "FunctionPropertiesAnalysis.cpp",
    "GlobalsModRef.cpp",
    "GuardUtils.cpp",
    "HeatUtils.cpp",
    "IRSimilarityIdentifier.cpp",
    "IVDescriptors.cpp",
    "IVUsers.cpp",
    "ImportedFunctionsInliningStatistics.cpp",
    "IndirectCallPromotionAnalysis.cpp",
    "InlineAdvisor.cpp",
    "InlineCost.cpp",
    "InlineOrder.cpp",
    "InlineSizeEstimatorAnalysis.cpp",
    "InstCount.cpp",
    "InstructionPrecedenceTracking.cpp",
    "InstructionSimplify.cpp",
    "InteractiveModelRunner.cpp",
    "LazyBlockFrequencyInfo.cpp",
    "LazyBranchProbabilityInfo.cpp",
    "LazyCallGraph.cpp",
    "LazyValueInfo.cpp",
    "Lint.cpp",
    "Loads.cpp",
    "Local.cpp",
    "LoopAccessAnalysis.cpp",
    "LoopAnalysisManager.cpp",
    "LoopCacheAnalysis.cpp",
    "LoopInfo.cpp",
    "LoopNestAnalysis.cpp",
    "LoopPass.cpp",
    "LoopUnrollAnalyzer.cpp",
    "MLInlineAdvisor.cpp",
    "MemDerefPrinter.cpp",
    "MemoryBuiltins.cpp",
    "MemoryDependenceAnalysis.cpp",
    "MemoryLocation.cpp",
    "MemoryProfileInfo.cpp",
    "MemorySSA.cpp",
    "MemorySSAUpdater.cpp",
    "ModelUnderTrainingRunner.cpp",
    "ModuleDebugInfoPrinter.cpp",
    "ModuleSummaryAnalysis.cpp",
    "MustExecute.cpp",
    "NoInferenceModelRunner.cpp",
    "ObjCARCAliasAnalysis.cpp",
    "ObjCARCAnalysisUtils.cpp",
    "ObjCARCInstKind.cpp",
    "OptimizationRemarkEmitter.cpp",
    "OverflowInstAnalysis.cpp",
    "PHITransAddr.cpp",
    "PhiValues.cpp",
    "PostDominators.cpp",
    "ProfileSummaryInfo.cpp",
    "PtrUseVisitor.cpp",
    "RegionInfo.cpp",
    "RegionPass.cpp",
    "RegionPrinter.cpp",
    "ReplayInlineAdvisor.cpp",
    "ScalarEvolution.cpp",
    "ScalarEvolutionAliasAnalysis.cpp",
    "ScalarEvolutionDivision.cpp",
    "ScalarEvolutionNormalization.cpp",
    "ScopedNoAliasAA.cpp",
    "StackLifetime.cpp",
    "StackSafetyAnalysis.cpp",
    "StructuralHash.cpp",
    "SyntheticCountsUtils.cpp",
    "TFLiteUtils.cpp",
    "TargetLibraryInfo.cpp",
    "TargetTransformInfo.cpp",
    "TensorSpec.cpp",
    "Trace.cpp",
    "TrainingLogger.cpp",
    "TypeBasedAliasAnalysis.cpp",
    "TypeMetadataUtils.cpp",
    "UniformityAnalysis.cpp",
    "ValueLattice.cpp",
    "ValueLatticeUtils.cpp",
    "ValueTracking.cpp",
    "VectorUtils.cpp",
  ]
}
