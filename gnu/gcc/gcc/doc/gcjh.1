.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GCJH 1"
.TH GCJH 1 "2007-07-19" "gcc-4.2.1" "GNU"
.SH "NAME"
gcjh \- generate header files from Java class files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
gcjh [\fB\-stubs\fR] [\fB\-jni\fR]
    [\fB\-force\fR] [\fB\-old\fR] [\fB\-trace\fR] [\fB\-J\fR \fIoption\fR]
    [\fB\-add\fR \fItext\fR] [\fB\-append\fR \fItext\fR] [\fB\-friend\fR \fItext\fR]
    [\fB\-preprend\fR \fItext\fR]
    [\fB\-\-classpath\fR=\fIpath\fR] [\fB\-\-CLASSPATH\fR=\fIpath\fR]
    [\fB\-\-bootclasspath\fR=\fIpath\fR]
    [\fB\-I\fR\fIdir\fR...] [\fB\-d\fR \fIdir\fR...]
    [\fB\-o\fR \fIfile\fR] [\fB\-td\fR \fIdir\fR]
    [\fB\-M\fR] [\fB\-MM\fR] [\fB\-MD\fR] [\fB\-MMD\fR]
    [\fB\-\-version\fR] [\fB\-\-help\fR] [\fB\-v\fR] [\fB\-\-verbose\fR]
    \fIclassname\fR...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \f(CW\*(C`gcjh\*(C'\fR program is used to generate header files from class
files.  It can generate both \s-1CNI\s0 and \s-1JNI\s0 header files, as well as stub
implementation files which can be used as a basis for implementing the
required native methods.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-stubs\fR" 4
.IX Item "-stubs"
This causes \f(CW\*(C`gcjh\*(C'\fR to generate stub files instead of header files.
By default the stub file will be named after the class, with a suffix of
\&\fB.cc\fR.  In \s-1JNI\s0 mode, the default output file will have the suffix
\&\fB.c\fR.
.IP "\fB\-jni\fR" 4
.IX Item "-jni"
This tells \f(CW\*(C`gcjh\*(C'\fR to generate a \s-1JNI\s0 header or stub.  By default,
\&\s-1CNI\s0 headers are generated.
.IP "\fB\-force\fR" 4
.IX Item "-force"
This option forces \f(CW\*(C`gcjh\*(C'\fR to write the output file.
.IP "\fB\-old\fR" 4
.IX Item "-old"
This option is accepted but ignored for compatibility.
.IP "\fB\-trace\fR" 4
.IX Item "-trace"
This option is accepted but ignored for compatibility.
.IP "\fB\-J\fR \fIoption\fR" 4
.IX Item "-J option"
This option is accepted but ignored for compatibility.
.IP "\fB\-add\fR \fItext\fR" 4
.IX Item "-add text"
Inserts \fItext\fR into the class body.  This is ignored in \s-1JNI\s0 mode.
.IP "\fB\-append\fR \fItext\fR" 4
.IX Item "-append text"
Inserts \fItext\fR into the header file after the class declaration.
This is ignored in \s-1JNI\s0 mode.
.IP "\fB\-friend\fR \fItext\fR" 4
.IX Item "-friend text"
Inserts \fItext\fR into the class as a \f(CW\*(C`friend\*(C'\fR declaration.
This is ignored in \s-1JNI\s0 mode.
.IP "\fB\-prepend\fR \fItext\fR" 4
.IX Item "-prepend text"
Inserts \fItext\fR into the header file before the class declaration.
This is ignored in \s-1JNI\s0 mode.
.IP "\fB\-\-classpath=\fR\fIpath\fR" 4
.IX Item "--classpath=path"
.PD 0
.IP "\fB\-\-CLASSPATH=\fR\fIpath\fR" 4
.IX Item "--CLASSPATH=path"
.IP "\fB\-\-bootclasspath=\fR\fIpath\fR" 4
.IX Item "--bootclasspath=path"
.IP "\fB\-I\fR\fIdirectory\fR" 4
.IX Item "-Idirectory"
.IP "\fB\-d\fR \fIdirectory\fR" 4
.IX Item "-d directory"
.IP "\fB\-o\fR \fIfile\fR" 4
.IX Item "-o file"
.PD
These options are all identical to the corresponding \fBgcj\fR options.
.IP "\fB\-o\fR \fIfile\fR" 4
.IX Item "-o file"
Sets the output file name.  This cannot be used if there is more than
one class on the command line.
.IP "\fB\-td\fR \fIdirectory\fR" 4
.IX Item "-td directory"
Sets the name of the directory to use for temporary files.
.IP "\fB\-M\fR" 4
.IX Item "-M"
Print all dependencies to stdout; suppress ordinary output.
.IP "\fB\-MM\fR" 4
.IX Item "-MM"
Print non-system dependencies to stdout; suppress ordinary output.
.IP "\fB\-MD\fR" 4
.IX Item "-MD"
Print all dependencies to stdout.
.IP "\fB\-MMD\fR" 4
.IX Item "-MMD"
Print non-system dependencies to stdout.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Print help about \f(CW\*(C`gcjh\*(C'\fR and exit.  No further processing is done.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Print version information for \f(CW\*(C`gcjh\*(C'\fR and exit.  No further
processing is done.
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
Print extra information while running.
.PP
All remaining options are considered to be names of classes.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgcc\fR\|(1), \fIgcj\fR\|(1), \fIgij\fR\|(1), \fIjv\-scan\fR\|(1), \fIjcf\-dump\fR\|(1), \fIgfdl\fR\|(7),
and the Info entries for \fIgcj\fR and \fIgcc\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the \s-1GNU\s0 Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with the
Invariant Sections being \*(L"\s-1GNU\s0 General Public License\*(R", the Front-Cover
texts being (a) (see below), and with the Back-Cover Texts being (b)
(see below).  A copy of the license is included in the
man page \fIgfdl\fR\|(7).
.PP
(a) The \s-1FSF\s0's Front-Cover Text is:
.PP
.Vb 1
\&     A GNU Manual
.Ve
.PP
(b) The \s-1FSF\s0's Back-Cover Text is:
.PP
.Vb 3
\&     You have freedom to copy and modify this GNU Manual, like GNU
\&     software.  Copies published by the Free Software Foundation raise
\&     funds for GNU development.
.Ve
