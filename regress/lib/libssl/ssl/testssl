#!/bin/sh

key="$1"
cert="$2"
CA="-CAfile $3"
ssltest="${4-./ssltest} -key $key -cert $cert -c_key $key -c_cert $cert"
openssl=${5-openssl}
extra="$6"

$openssl version || exit 1

if $openssl x509 -in $cert -text -noout | fgrep 'DSA Public Key' >/dev/null; then
  dsa_cert=YES
else
  dsa_cert=NO
fi

#############################################################################

echo test sslv2/sslv3
$ssltest $extra || exit 1

echo test sslv2/sslv3 with server authentication
$ssltest -server_auth $CA $extra || exit 1

echo test sslv2/sslv3 with client authentication
$ssltest -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 with both client and server authentication
$ssltest -server_auth -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 via BIO pair
$ssltest $extra || exit 1

if [ $dsa_cert = NO ]; then
  echo 'test sslv2/sslv3 w/o (EC)DHE via BIO pair'
  $ssltest -bio_pair -no_dhe -no_ecdhe $extra || exit 1
fi

echo test sslv2/sslv3 with 1024bit DHE via BIO pair
$ssltest -bio_pair -dhe1024dsa -v $extra || exit 1

echo test sslv2/sslv3 with server authentication
$ssltest -bio_pair -server_auth $CA $extra || exit 1

echo test sslv2/sslv3 with client authentication via BIO pair
$ssltest -bio_pair -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 with both client and server authentication via BIO pair
$ssltest -bio_pair -server_auth -client_auth $CA $extra || exit 1

echo test sslv2/sslv3 with both client and server authentication via BIO pair and app verify
$ssltest -bio_pair -server_auth -client_auth -app_verify $CA $extra || exit 1

echo "Testing ciphersuites"
for protocol in SSLv3 TLSv1.2; do
  echo "Testing ciphersuites for $protocol"
  for cipher in `$openssl ciphers -v "$protocol+aRSA" |
    awk "/ $protocol / { print \\$1 }"`; do
    echo "Testing $cipher"
    $ssltest -cipher $cipher -tls1_2
    if [ $? -ne 0 ] ; then
      echo "Failed $cipher"
      exit 1
    fi
  done
done
for protocol in TLSv1.3; do
  echo "Testing ciphersuites for $protocol at security level 2"
  for cipher in `$openssl ciphers -v "$protocol" |
    awk "/ $protocol / { print \\$1 }"`; do
    echo "Testing $cipher"
    $ssltest -cipher $cipher -seclevel 2
    if [ $? -ne 0 ] ; then
      echo "Failed $cipher"
      exit 1
    fi
  done
done
for protocol in TLSv1.3; do
  echo "Testing ciphersuites for $protocol at security level 3"
  for cipher in `$openssl ciphers -v "$protocol" |
    awk "/ $protocol / { print \\$1 }"`; do
    echo "Testing $cipher"
    $ssltest -cipher $cipher -seclevel 3
    if [ $? -eq 0 ] ; then
      echo "Failed $cipher should not have succeeded"
      exit 1
    fi
  done
done

#############################################################################

if $openssl no-dh; then
  echo skipping anonymous DH tests
else
  echo skipping tls1 tests.
fi

#if $openssl no-rsa; then
#  echo skipping RSA tests
#else
#  echo 'test tls1 with 1024bit RSA, no (EC)DHE, multiple handshakes'
#  ./ssltest -v -bio_pair -tls1 -cert ../apps/server2.pem -no_dhe -no_ecdhe -num 10 -f -time $extra || exit 1
#
#  if $openssl no-dh; then
#    echo skipping RSA+DHE tests
#  else
#    echo test tls1 with 1024bit RSA, 1024bit DHE, multiple handshakes
#    ./ssltest -v -bio_pair -tls1 -cert ../apps/server2.pem -dhe1024dsa -num 10 -f -time $extra || exit 1
#  fi
#fi

#
# DTLS tests
#

$ssltest -dtls1_2 $extra || exit 1

echo test dtlsv1_2 with server authentication
$ssltest -dtls1_2 -server_auth $CA $extra || exit 1

echo test dtlsv1_2 with client authentication
$ssltest -dtls1_2 -client_auth $CA $extra || exit 1

echo test dtlsv1_2 with both client and server authentication
$ssltest -dtls1_2 -server_auth -client_auth $CA $extra || exit 1

echo "Testing DTLS ciphersuites"
for protocol in SSLv3; do
  echo "Testing ciphersuites for $protocol"
  for cipher in `$openssl ciphers -v "RSA+$protocol" |
    awk "/ $protocol / { print \\$1 }" |
    grep -v RC4`; do
    echo "Testing $cipher"
    $ssltest -cipher $cipher -dtls1_2
    if [ $? -ne 0 ] ; then
      echo "Failed $cipher"
      exit 1
    fi
  done
done

#
# ALPN tests
#
echo "Testing ALPN..."
$ssltest -bio_pair -alpn_client foo -alpn_server bar || exit 1
$ssltest -bio_pair -alpn_client foo -alpn_server foo \
  -alpn_expected foo || exit 1
$ssltest -bio_pair -alpn_client foo,bar -alpn_server foo \
  -alpn_expected foo || exit 1
$ssltest -bio_pair -alpn_client bar,foo -alpn_server foo \
  -alpn_expected foo || exit 1
$ssltest -bio_pair -alpn_client bar,foo -alpn_server foo,bar \
  -alpn_expected foo || exit 1
$ssltest -bio_pair -alpn_client bar,foo -alpn_server bar,foo \
  -alpn_expected bar || exit 1
$ssltest -bio_pair -alpn_client foo,bar -alpn_server bar,foo \
  -alpn_expected bar || exit 1
$ssltest -bio_pair -alpn_client baz -alpn_server bar,foo || exit 1
