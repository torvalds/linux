#	$OpenBSD: Makefile.amd64,v 1.144 2025/07/05 19:03:02 kn Exp $

# For instructions on building kernels consult the config(8) and options(4)
# manual pages.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).

.include <bsd.own.mk>

SIZE?=	size
STRIP?=	ctfstrip

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	cd ../../../..; pwd
.endif

_machdir?=	$S/arch/${_mach}
_archdir?=	$S/arch/${_arch}

INCLUDES=	-nostdinc -I$S -I${.OBJDIR} -I$S/arch \
		-I$S/dev/pci/drm/include \
		-I$S/dev/pci/drm/include/uapi \
		-I$S/dev/pci/drm/amd/include/asic_reg \
		-I$S/dev/pci/drm/amd/include \
		-I$S/dev/pci/drm/amd/amdgpu \
		-I$S/dev/pci/drm/amd/display \
		-I$S/dev/pci/drm/amd/display/include \
		-I$S/dev/pci/drm/amd/display/dc \
		-I$S/dev/pci/drm/amd/display/amdgpu_dm \
		-I$S/dev/pci/drm/amd/pm/inc \
		-I$S/dev/pci/drm/amd/pm/legacy-dpm \
		-I$S/dev/pci/drm/amd/pm/swsmu \
		-I$S/dev/pci/drm/amd/pm/swsmu/inc \
		-I$S/dev/pci/drm/amd/pm/swsmu/smu11 \
		-I$S/dev/pci/drm/amd/pm/swsmu/smu12 \
		-I$S/dev/pci/drm/amd/pm/swsmu/smu13 \
		-I$S/dev/pci/drm/amd/pm/swsmu/smu14 \
		-I$S/dev/pci/drm/amd/pm/powerplay/inc \
		-I$S/dev/pci/drm/amd/pm/powerplay/hwmgr \
		-I$S/dev/pci/drm/amd/pm/powerplay/smumgr \
		-I$S/dev/pci/drm/amd/pm/swsmu/inc \
		-I$S/dev/pci/drm/amd/pm/swsmu/inc/pmfw_if \
		-I$S/dev/pci/drm/amd/display/dc/inc \
		-I$S/dev/pci/drm/amd/display/dc/inc/hw \
		-I$S/dev/pci/drm/amd/display/dc/clk_mgr \
		-I$S/dev/pci/drm/amd/display/dc/dccg \
		-I$S/dev/pci/drm/amd/display/dc/dio \
		-I$S/dev/pci/drm/amd/display/dc/dpp \
		-I$S/dev/pci/drm/amd/display/dc/dsc \
		-I$S/dev/pci/drm/amd/display/dc/dwb \
		-I$S/dev/pci/drm/amd/display/dc/hubbub \
		-I$S/dev/pci/drm/amd/display/dc/hpo \
		-I$S/dev/pci/drm/amd/display/dc/hwss \
		-I$S/dev/pci/drm/amd/display/dc/hubp \
		-I$S/dev/pci/drm/amd/display/dc/dml2 \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21 \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21/inc \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_core \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_dpmm \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_mcg \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_pmo \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_standalone_libraries \
		-I$S/dev/pci/drm/amd/display/dc/dml2/dml21/src/inc \
		-I$S/dev/pci/drm/amd/display/dc/mmhubbub \
		-I$S/dev/pci/drm/amd/display/dc/mpc \
		-I$S/dev/pci/drm/amd/display/dc/opp \
		-I$S/dev/pci/drm/amd/display/dc/optc \
		-I$S/dev/pci/drm/amd/display/dc/pg \
		-I$S/dev/pci/drm/amd/display/dc/resource \
		-I$S/dev/pci/drm/amd/display/modules/inc \
		-I$S/dev/pci/drm/amd/display/modules/hdcp \
		-I$S/dev/pci/drm/amd/display/dmub/inc \
		-I$S/dev/pci/drm/i915
CPPFLAGS=	${INCLUDES} ${IDENT} ${PARAM} -D_KERNEL -MD -MP
CWARNFLAGS=	-Werror -Wall -Wimplicit-function-declaration \
		-Wno-pointer-sign \
		-Wframe-larger-than=2047

CMACHFLAGS=	-mcmodel=kernel -mno-red-zone -mno-sse2 -mno-sse -mno-3dnow \
		-mno-mmx -msoft-float -fno-omit-frame-pointer
CMACHFLAGS+=	-ffreestanding ${NOPIE_FLAGS}
SORTR=		sort -R
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
.if ${IDENT:M-DDDB}
CMACHFLAGS+=	-msave-args
.endif
.if ${IDENT:M-DSMALL_KERNEL}
SORTR=		cat
COPTIMIZE=	-Oz
.if ${COMPILER_VERSION:Mclang}
CMACHFLAGS+=	-mno-retpoline -fcf-protection=none
.endif
.else
CMACHFLAGS+=	-mretpoline-external-thunk -fcf-protection=branch
CMACHFLAGS+=	-fret-clean
.endif
.if ${COMPILER_VERSION:Mclang}
NO_INTEGR_AS=	-no-integrated-as
CWARNFLAGS+=	-Wno-address-of-packed-member -Wno-constant-conversion \
		-Wno-unused-but-set-variable -Wno-gnu-folding-constant
.endif

DEBUG?=		-g
COPTIMIZE?=	-O2
CFLAGS=		${DEBUG} ${CWARNFLAGS} ${CMACHFLAGS} ${COPTIMIZE} ${COPTS} ${PIPE}
AFLAGS=		-D_LOCORE -x assembler-with-cpp ${CWARNFLAGS} ${CMACHFLAGS}
LINKFLAGS=	-T ld.script -X --warn-common -nopie
# propagate failure like ENOSPC on relink
LINKFLAGS+=	--no-mmap-output-file

HOSTCC?=	${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<

NORMAL_C_NOP=	${CC} ${CFLAGS} ${CPPFLAGS} -fno-ret-protector -c $<
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} ${PROF} -c $<

%OBJS

%CFILES

%SFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_HEAD=	locore0.o gap.o
SYSTEM_OBJ=	${SYSTEM_HEAD} ${OBJS} param.o ioconf.o
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ} ld.script
SYSTEM_LD_HEAD=	@rm -f $@
SYSTEM_LD=	@echo ${LD} ${LINKFLAGS} -o $@ '$${SYSTEM_HEAD} vers.o $${OBJS}'; \
		umask 007; \
		echo ${OBJS} param.o ioconf.o vers.o | tr " " "\n" | ${SORTR} > lorder; \
		${LD} ${LINKFLAGS} -o $@ ${SYSTEM_HEAD} `cat lorder`
SYSTEM_LD_TAIL=	@${SIZE} $@

.if ${DEBUG} == "-g"
STRIPFLAGS=	-S
SYSTEM_LD_TAIL+=; umask 007; \
		echo mv $@ $@.gdb; rm -f $@.gdb; mv $@ $@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} -o $@ $@.gdb; \
		${STRIP} ${STRIPFLAGS} -o $@ $@.gdb
.else
LINKFLAGS+=	-S
.endif

.if ${SYSTEM_OBJ:Mkcov.o} && ${COMPILER_VERSION:Mclang}
PROF=		-fsanitize-coverage=trace-pc,trace-cmp
.endif

.if ${IDENT:M-DKUBSAN} && ${COMPILER_VERSION:Mclang}
CFLAGS+=	-fsanitize=undefined
CFLAGS+=	-fno-wrapv
.endif

%LOAD

# cc's -MD puts the source and output paths in the dependency file;
# since those are temp files here we need to fix it up.  It also
# puts the file in /tmp, so we use -MF to put it in the current
# directory as assym.P and then generate assym.d from it with a
# good target name
assym.h: $S/kern/genassym.sh Makefile \
	 ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf
	cat ${_archdir}/${_arch}/genassym.cf ${_machdir}/${_mach}/genassym.cf | \
	    sh $S/kern/genassym.sh ${CC} ${NO_INTEGR_AS} ${CFLAGS} ${CPPFLAGS} -MF assym.P > assym.h.tmp
	sed '1s/.*/assym.h: \\/' assym.P > assym.d
	sort -u assym.h.tmp > assym.h

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C}

mcount.o: $S/lib/libkern/mcount.c Makefile
	${NORMAL_C_NOP}

ioconf.o: ioconf.c
	${NORMAL_C}

locore.o: assym.h
	${NORMAL_S}
	@[[ -n `objdump -D $@ | grep -A1 doreti_iret | grep -v ^-- | sort | \
	 uniq -d` ]] || \
	 { rm -f $@; echo "ERROR: overlaid iretq instructions don't line up"; \
	   echo "#GP-on-iretq fault handling would be broken"; exit 1; }

ld.script: ${_machdir}/conf/ld.script
	cp ${_machdir}/conf/ld.script $@

gapdummy.o:
	echo '__asm(".section .rodata,\"a\"");' > gapdummy.c
	${CC} -c ${CFLAGS} ${CPPFLAGS} -fcf-protection=none gapdummy.c -o $@

makegap.sh:
	cp $S/conf/makegap.sh $@

MAKE_GAP = LD="${LD}" sh makegap.sh 0xcccccccc gapdummy.o

gap.o:	Makefile makegap.sh gapdummy.o vers.o
	${MAKE_GAP}

vers.o: ${SYSTEM_DEP:Ngap.o}
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c

.if ${SYSTEM_OBJ:Mkcov.o} && ${COMPILER_VERSION:Mclang}
kcov.o: $S/dev/kcov.c
	${NORMAL_C} -fno-sanitize-coverage=trace-pc,trace-cmp
.endif

HARDFLOAT_CFLAGS= -msse -msse2

display_mode_vba.o: $S/dev/pci/drm/amd/display/dc/dml/display_mode_vba.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn10_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn10/dcn10_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn20_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_20.o: $S/dev/pci/drm/amd/display/dc/dml/dcn20/display_mode_vba_20.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_calc_20.o: $S/dev/pci/drm/amd/display/dc/dml/dcn20/display_rq_dlg_calc_20.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_20v2.o: $S/dev/pci/drm/amd/display/dc/dml/dcn20/display_mode_vba_20v2.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_calc_20v2.o: $S/dev/pci/drm/amd/display/dc/dml/dcn20/display_rq_dlg_calc_20v2.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_21.o: $S/dev/pci/drm/amd/display/dc/dml/dcn21/display_mode_vba_21.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_calc_21.o: $S/dev/pci/drm/amd/display/dc/dml/dcn21/display_rq_dlg_calc_21.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_30.o: $S/dev/pci/drm/amd/display/dc/dml/dcn30/display_mode_vba_30.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_calc_30.o: $S/dev/pci/drm/amd/display/dc/dml/dcn30/display_rq_dlg_calc_30.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_31.o: $S/dev/pci/drm/amd/display/dc/dml/dcn31/display_mode_vba_31.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_calc_31.o: $S/dev/pci/drm/amd/display/dc/dml/dcn31/display_rq_dlg_calc_31.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_314.o: $S/dev/pci/drm/amd/display/dc/dml/dcn314/display_mode_vba_314.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_calc_314.o: $S/dev/pci/drm/amd/display/dc/dml/dcn314/display_rq_dlg_calc_314.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn314_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn314/dcn314_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn30_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn30/dcn30_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn32_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn32/dcn32_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_32.o: $S/dev/pci/drm/amd/display/dc/dml/dcn32/display_mode_vba_32.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_calc_32.o: $S/dev/pci/drm/amd/display/dc/dml/dcn32/display_rq_dlg_calc_32.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_vba_util_32.o: $S/dev/pci/drm/amd/display/dc/dml/dcn32/display_mode_vba_util_32.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn321_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn321/dcn321_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn31_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn31/dcn31_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn301_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn301/dcn301_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn302_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn302/dcn302_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn303_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn303/dcn303_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
rc_calc_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dsc/rc_calc_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn_calcs.o: $S/dev/pci/drm/amd/display/dc/dml/calcs/dcn_calcs.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn_calc_auto.o: $S/dev/pci/drm/amd/display/dc/dml/calcs/dcn_calc_auto.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn_calc_math.o: $S/dev/pci/drm/amd/display/dc/dml/calcs/dcn_calc_math.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml1_display_rq_dlg_calc.o: $S/dev/pci/drm/amd/display/dc/dml/dml1_display_rq_dlg_calc.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_rq_dlg_helpers.o: $S/dev/pci/drm/amd/display/dc/dml/display_rq_dlg_helpers.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn35_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn35/dcn35_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dcn351_fpu.o: $S/dev/pci/drm/amd/display/dc/dml/dcn351/dcn351_fpu.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_core.o: $S/dev/pci/drm/amd/display/dc/dml2/display_mode_core.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
display_mode_util.o: $S/dev/pci/drm/amd/display/dc/dml2/display_mode_util.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_policy.o: $S/dev/pci/drm/amd/display/dc/dml2/dml2_policy.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_utils.o: $S/dev/pci/drm/amd/display/dc/dml2/dml2_utils.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_core_dcn4.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_core/dml2_core_dcn4.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_core_dcn4_calcs.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_core/dml2_core_dcn4_calcs.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_core_utils.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_core/dml2_core_utils.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_dpmm_dcn4.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_dpmm/dml2_dpmm_dcn4.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_pmo_dcn3.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_pmo/dml2_pmo_dcn3.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_pmo_dcn4_fams2.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_pmo/dml2_pmo_dcn4_fams2.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
lib_float_math.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_standalone_libraries/lib_float_math.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml_top_mcache.o: $S/dev/pci/drm/amd/display/dc/dml2/dml21/src/dml2_top/dml_top_mcache.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml2_utils.o: $S/dev/pci/drm/amd/display/dc/dml2/dml2_utils.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}
dml_display_rq_dlg_calc.o: $S/dev/pci/drm/amd/display/dc/dml2/dml_display_rq_dlg_calc.c
	${NORMAL_C} ${HARDFLOAT_CFLAGS}

clean:
	rm -f *bsd *bsd.gdb *.[dio] [a-z]*.s assym.* \
	    gap.link gapdummy.c ld.script lorder makegap.sh param.c

cleandir: clean
	rm -f Makefile *.h ioconf.c options machine ${_mach} vers.c

depend obj:

locore0.o: ${_machdir}/${_mach}/locore0.S assym.h
mutex.o vector.o copy.o spl.o mds.o: assym.h
mptramp.o acpi_wakecode.o vmm_support.o: assym.h

hardlink-obsd:
	[[ ! -f /bsd ]] || cmp -s bsd /bsd || ln -f /bsd /obsd

reconfig:
	[[ ! -f /etc/bsd.re-config ]] || config -e -c /etc/bsd.re-config -f bsd

newinstall:
	install -F -m 700 bsd /bsd && sha256 -h /var/db/kernel.SHA256 /bsd

install: update-link hardlink-obsd reconfig newinstall

# pull in the dependency information
.ifnmake clean
. for o in ${SYSTEM_OBJ:Ngap.o} assym.h
.  if exists(${o:R}.d)
.   include "${o:R}.d"
.  elif exists($o)
    .PHONY: $o
.  endif
. endfor
.endif

%RULES
