.\" $OpenBSD: curs_clear.3,v 1.8 2023/10/17 09:52:08 nicm Exp $
.\"
.\"***************************************************************************
.\" Copyright 2018-2022,2023 Thomas E. Dickey                                *
.\" Copyright 1998-2010,2016 Free Software Foundation, Inc.                  *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_clear.3,v 1.8 2023/10/17 09:52:08 nicm Exp $
.TH curs_clear 3 2023-07-01 "ncurses 6.4" "Library calls"
.na
.hy 0
.de bP
.ie n  .IP \(bu 4
.el    .IP \(bu 2
..
.SH NAME
\fBerase\fP,
\fBwerase\fP,
\fBclear\fP,
\fBwclear\fP,
\fBclrtobot\fP,
\fBwclrtobot\fP,
\fBclrtoeol\fP,
\fBwclrtoeol\fP \- clear all or part of a \fBcurses\fP window
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fP
.sp
\fBint erase(void);\fP
.br
\fBint werase(WINDOW *\fIwin\fB);\fR
.sp
\fBint clear(void);\fP
.br
\fBint wclear(WINDOW *\fIwin\fB);\fR
.sp
\fBint clrtobot(void);\fP
.br
\fBint wclrtobot(WINDOW *\fIwin\fB);\fR
.sp
\fBint clrtoeol(void);\fP
.br
\fBint wclrtoeol(WINDOW *\fIwin\fB);\fR
.SH DESCRIPTION
.SS erase/werase
The \fBerase\fP and \fBwerase\fP routines copy blanks to every
position in the window, clearing the screen.
.PP
Blanks created by erasure have the current background rendition (as set
by \fBwbkgdset\fP(3)) merged into them.
.SS clear/wclear
The \fBclear\fP and \fBwclear\fP routines are like \fBerase\fP and
\fBwerase\fP, but they also call \fBclearok\fP(3), so that the screen is
cleared completely on the next call to \fBwrefresh\fP for that window
and repainted from scratch.
.SS clrtobot/wclrtobot
The \fBclrtobot\fP and \fBwclrtobot\fP routines erase from the cursor to the
end of screen.
That is, they erase all lines below the cursor in the window.
Also, the current line to the right of the cursor, inclusive, is erased.
.SS clrtoeol/wclrtoeol
The \fBclrtoeol\fP and \fBwclrtoeol\fP routines erase the current line
to the right of the cursor, inclusive, to the end of the current line.
.SH RETURN VALUE
All routines return the integer \fBOK\fP on success and \fBERR\fP on failure.
.PP
X/Open defines no error conditions.
In this implementation,
.bP
functions using a window pointer parameter return an error if it is null
.bP
\fBwclrtoeol\fP returns an error
if the cursor position is about to wrap.
.SH NOTES
Note that \fBerase\fP, \fBwerase\fP, \fBclear\fP, \fBwclear\fP,
\fBclrtobot\fP, and \fBclrtoeol\fP may be macros.
.SH PORTABILITY
These functions are described in the XSI Curses standard, Issue 4.
The
standard specifies that they return \fBERR\fP on failure, but specifies no
error conditions.
.PP
The SVr4.0 manual says that these functions could
return "a non-negative integer if \fBimmedok\fP(3) is set",
referring to the return-value of \fBwrefresh\fP.
In that implementation, \fBwrefresh\fP would return a count of
the number of characters written to the terminal.
.PP
Some historic curses implementations had, as an undocumented feature, the
ability to do the equivalent of \fBclearok(..., 1)\fP by saying
\fBtouchwin(stdscr)\fP or \fBclear(stdscr)\fP.
This will not work under
ncurses.
.PP
This implementation, and others such as Solaris,
sets the current position to 0,0 after erasing
via \fBwerase\fP and \fBwclear\fP.
That fact is not documented in other implementations,
and may not be true of implementations
which were not derived from SVr4 source.
.PP
Not obvious from the description,
most implementations clear the screen after \fBwclear\fP
even for a subwindow or derived window.
If you do not want to clear the screen during the next \fBwrefresh\fP,
use \fBwerase\fP instead.
.SH SEE ALSO
\fBcurses\fP(3),
\fBcurs_outopts\fP(3),
\fBcurs_refresh\fP(3),
\fBcurs_variables\fP(3)
