.\" $OpenBSD: BN_cmp.3,v 1.11 2025/06/08 22:40:29 schwarze Exp $
.\" full merge up to: OpenSSL 5b31b9df Aug 4 10:45:52 2021 +0300
.\"
.\" This file was written by Ulf Moeller <ulf@openssl.org>.
.\" Copyright (c) 2000 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 8 2025 $
.Dt BN_CMP 3
.Os
.Sh NAME
.Nm BN_cmp ,
.Nm BN_ucmp ,
.Nm BN_is_zero ,
.Nm BN_is_one ,
.Nm BN_is_word ,
.Nm BN_abs_is_word ,
.Nm BN_is_odd
.Nd BIGNUM comparison and test functions
.Sh SYNOPSIS
.Lb libcrypto
.In openssl/bn.h
.Ft int
.Fo BN_cmp
.Fa "const BIGNUM *a"
.Fa "const BIGNUM *b"
.Fc
.Ft int
.Fo BN_ucmp
.Fa "const BIGNUM *a"
.Fa "const BIGNUM *b"
.Fc
.Ft int
.Fo BN_is_zero
.Fa "const BIGNUM *a"
.Fc
.Ft int
.Fo BN_is_one
.Fa "const BIGNUM *a"
.Fc
.Ft int
.Fo BN_is_word
.Fa "const BIGNUM *a"
.Fa "const BN_ULONG w"
.Fc
.Ft int
.Fo BN_abs_is_word
.Fa "const BIGNUM *a"
.Fa "const BN_ULONG w"
.Fc
.Ft int
.Fo BN_is_odd
.Fa "const BIGNUM *a"
.Fc
.Sh DESCRIPTION
.Fn BN_cmp
compares the numbers
.Fa a
and
.Fa b .
.Fn BN_ucmp
compares their absolute values.
.Pp
.Fn BN_is_zero ,
.Fn BN_is_one
and
.Fn BN_is_word
test if
.Fa a
equals 0, 1, or
.Fa w
respectively.
.Fn BN_abs_is_word
tests if the absolute value of
.Fa a
equals
.Fa w .
.Fn BN_is_odd
tests if a is odd.
.Pp
.Vt BN_ULONG
is a macro that expands to
.Vt unsigned long Pq = Vt uint64_t
on
.Dv _LP64
platforms and
.Vt unsigned int Pq = Vt uint32_t
elsewhere.
.Sh RETURN VALUES
.Fn BN_cmp
returns -1 if
.Fa a Ns < Ns Fa b ,
0 if
.Fa a Ns == Ns Fa b ,
and 1 if
.Fa a Ns > Ns Fa b .
.Fn BN_ucmp
is the same using the absolute values of
.Fa a
and
.Fa b .
.Pp
.Fn BN_is_zero ,
.Fn BN_is_one ,
.Fn BN_is_word ,
.Fn BN_abs_is_word ,
and
.Fn BN_is_odd
return 1 if the condition is true, 0 otherwise.
.Sh SEE ALSO
.Xr BN_new 3
.Sh HISTORY
.Fn BN_cmp ,
.Fn BN_ucmp ,
.Fn BN_is_zero ,
.Fn BN_is_one ,
and
.Fn BN_is_word
first appeared in SSLeay 0.5.1.
.Fn BN_is_odd
first appeared in SSLeay 0.8.0.
These functions have been available since
.Ox 2.4 .
.Pp
.Fn BN_abs_is_word
first appeared in OpenSSL 0.9.7 and has been available since
.Ox 3.2 .
