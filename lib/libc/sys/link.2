.\"	$OpenBSD: link.2,v 1.31 2024/07/18 15:38:57 millert Exp $
.\"	$NetBSD: link.2,v 1.7 1995/02/27 12:34:01 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)link.2	8.3 (Berkeley) 1/12/94
.\"
.Dd $Mdocdate: July 18 2024 $
.Dt LINK 2
.Os
.Sh NAME
.Nm link ,
.Nm linkat
.Nd make hard link to a file
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn link "const char *name1" "const char *name2"
.In fcntl.h
.In unistd.h
.Ft int
.Fn linkat "int fd1" "const char *name1" "int fd2" "const char *name2" "int flag"
.Sh DESCRIPTION
The
.Fn link
function atomically creates the specified directory entry (hard link)
.Fa name2
with the attributes of the underlying object pointed at by
.Fa name1 .
If the link is successful: the link count of the underlying object
is incremented;
.Fa name1
and
.Fa name2
share equal access and rights to the underlying object.
.Pp
If
.Fa name1
is removed, the file
.Fa name2
is not deleted and the link count of the underlying object is decremented.
.Pp
For the hard link to succeed,
.Fa name1
must exist and not be a directory, and both
.Fa name1
and
.Fa name2
must be in the same file system.
.Pp
The
.Fn linkat
function is equivalent to
.Fn link
except that where
.Fa name1
or
.Fa name2
specifies a relative path,
the directory entries linked are resolved relative to
the directories associated with file descriptors
.Fa fd1
or
.Fa fd2
(respectively) instead of the current working directory.
.Pp
If
.Fn linkat
is passed the special value
.Dv AT_FDCWD
(defined in
.In fcntl.h )
in the
.Fa fd1
or
.Fa fd2
parameter, the current working directory is used for resolving the respective
.Fa name1
or
.Fa name2
argument.
.Pp
The
.Fa flag
argument is the bitwise OR of zero or more of the following values:
.Pp
.Bl -tag -width AT_SYMLINK_FOLLOW -offset indent -compact
.It Dv AT_SYMLINK_FOLLOW
If
.Fa name1
names a symbolic link,
a new link for the target of the symbolic link is created.
.El
.Pp
If the
.Dv AT_SYMLINK_FOLLOW
flag is clear and
.Fa name1
names a symbolic link, a new link is created for the symbolic link
.Fa name1
and not its target.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn link
and
.Fn linkat
will fail and no link will be created if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of either path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
A component of either path prefix does not exist.
.It Bq Er EOPNOTSUPP
The file system containing the file named by
.Fa name1
does not support links.
.It Bq Er EMLINK
The link count of the file named by
.Fa name1
would exceed
.Dv LINK_MAX .
.It Bq Er EACCES
A component of either path prefix denies search permission.
.It Bq Er EACCES
The requested link requires writing in a directory with a mode
that denies write permission.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating one of the pathnames.
.It Bq Er ENOENT
The file named by
.Fa name1
does not exist.
.It Bq Er EEXIST
The link named by
.Fa name2
does exist.
.It Bq Er EPERM
The file named by
.Fa name1
is a directory.
.It Bq Er EPERM
The file named by
.Fa name1
is flagged immutable or append-only.
.It Bq Er EXDEV
The link named by
.Fa name2
and the file named by
.Fa name1
are on different file systems.
.It Bq Er ENOSPC
The directory in which the entry for the new link is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.It Bq Er EDQUOT
The directory in which the entry for the new link
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.It Bq Er EIO
An I/O error occurred while reading from or writing to
the file system to make the directory entry.
.It Bq Er EROFS
The requested link requires writing in a directory on a read-only file
system.
.It Bq Er EFAULT
One of the pathnames specified
is outside the process's allocated address space.
.El
.Pp
Additionally,
.Fn linkat
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of the
.Fa flag
argument was neither zero nor
.Dv AT_SYMLINK_FOLLOW .
.It Bq Er EBADF
The
.Fa name1
or
.Fa name2
argument specifies a relative path and the
.Fa fd1
or
.Fa fd2
argument, respectively, is neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er ENOTDIR
The
.Fa name1
or
.Fa name2
argument specifies a relative path and the
.Fa fd1
or
.Fa fd2
argument, respectively,
is a valid file descriptor but it does not reference a directory.
.It Bq Er EACCES
The
.Fa name1
or
.Fa name2
argument specifies a relative path but search permission is denied
for the directory which the
.Fa fd1
or
.Fa fd2
file descriptor, respectively, references.
.El
.Sh SEE ALSO
.Xr ln 1 ,
.Xr readlink 2 ,
.Xr symlink 2 ,
.Xr unlink 2
.Sh STANDARDS
The
.Fn link
and
.Fn linkat
functions are expected to conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn link
system call first appeared in
.At v1 .
The
.Fn linkat
function appeared in
.Ox 5.0 .
