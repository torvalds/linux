.\"	$OpenBSD: brk.2,v 1.24 2019/09/08 22:50:59 schwarze Exp $
.\"	$NetBSD: brk.2,v 1.7 1995/02/27 12:31:57 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)brk.2	8.2 (Berkeley) 12/11/93
.\"
.Dd $Mdocdate: September 8 2019 $
.Dt BRK 2
.Os
.Sh NAME
.Nm brk ,
.Nm sbrk
.Nd change data segment size
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn brk "void *addr"
.Ft void *
.Fn sbrk "int incr"
.Sh DESCRIPTION
.Bf -symbolic
The
.Fn brk
and
.Fn sbrk
functions are historical curiosities
left over from earlier days before the advent of virtual memory management.
.Ef
The
.Fn brk
function sets the break or lowest address
of a process's data segment (uninitialized data) to
.Fa addr
(immediately above bss).
Data addressing is restricted between
.Fa addr
and the lowest stack pointer to the stack segment.
Memory is allocated by
.Fn brk
in page size pieces;
if
.Fa addr
is not evenly divisible by the system page size, it is
increased to the next page boundary.
.Pp
.\" The
.\" .Nm sbrk
.\" function
.\" allocates chunks of
.\" .Fa incr
.\" bytes
.\" to the process's data space
.\" and returns an address pointer.
.\" The
.\" .Xr malloc 3
.\" function utilizes
.\" .Nm sbrk .
.\" .Pp
The current value of the program break is reliably returned by
.Dq Li sbrk(0)
(see also
.Xr end 3 ) .
The
.Xr getrlimit 2
system call may be used to determine
the maximum permissible size of the
.Em data
segment;
it will not be possible to set the break
beyond the
.Fa rlim_max
value returned from a call to
.Xr getrlimit 2 ,
e.g.,
.Ql etext + rlp->rlim_max
(see
.Xr end 3
for the definition of
.Em etext ) .
.Sh RETURN VALUES
.Rv -std brk
.Pp
The
.Fn sbrk
function returns a pointer to the base of the new storage if successful;
otherwise \-1 with
.Va errno
set to indicate why the allocation failed.
.Sh ERRORS
.Fn sbrk
will fail and no additional memory will be allocated if
one of the following are true:
.Bl -tag -width Er
.It Bq Er ENOMEM
The limit, as set by
.Xr setrlimit 2 ,
was exceeded.
.It Bq Er ENOMEM
The maximum possible size of a data segment (compiled into the
system) was exceeded.
.It Bq Er ENOMEM
Insufficient space existed in the swap area
to support the expansion.
.El
.Sh SEE ALSO
.Xr execve 2 ,
.Xr getrlimit 2 ,
.Xr mmap 2 ,
.Xr end 3 ,
.Xr malloc 3
.Sh HISTORY
A predecessor
.Fn break
appeared in
.At v1 .
The
.Fn sbrk
function call first appeared in
.At v4
and
.Fn brk
in
.At v6 .
.Sh BUGS
Setting the break may fail due to a temporary lack of swap space.
It is not possible to distinguish this from a failure caused by exceeding
the maximum size of the data segment without consulting
.Xr getrlimit 2 .
