.\"	$OpenBSD: _exit.2,v 1.23 2022/02/18 00:15:53 jsg Exp $
.\"	$NetBSD: _exit.2,v 1.6 1995/02/27 12:31:34 cgd Exp $
.\"
.\" Copyright (c) 1980, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)_exit.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: February 18 2022 $
.Dt _EXIT 2
.Os
.Sh NAME
.Nm _exit ,
.Nm _Exit
.Nd terminate the calling process
.Sh SYNOPSIS
.In unistd.h
.Ft void
.Fn _exit "int status"
.In stdlib.h
.Ft void
.Fn _Exit "int status"
.Sh DESCRIPTION
The
.Fn _exit
and
.Fn _Exit
functions terminate a process with the following consequences:
.Bl -bullet
.It
All threads in the process are terminated.
.It
All open file descriptors in the calling process are closed.
This may entail delays; for example, waiting for output to drain.
A process in this state may not be killed, as it is already dying.
.It
If the parent process of the calling process has an outstanding
.Xr wait 2
call or catches the
.Dv SIGCHLD
signal, it is notified of the calling process's termination and
.Fa status
is set as defined by
.Xr wait 2 .
(Note that typically only the lower 8 bits of
.Fa status
are passed on to the parent, thus negative values have less meaning.)
.It
The parent process ID of all of the calling process's existing child
processes are set to 1; the initialization process (see the
DEFINITIONS section of
.Xr intro 2 )
inherits each of these processes.
.It
If the termination of the process causes any process group
to become orphaned (usually because the parents of all members
of the group have now exited; see Orphaned Process Group in
.Xr intro 2 ) ,
and if any member of the orphaned group is stopped, the
.Dv SIGHUP
and
.Dv SIGCONT
signals are sent to all members of the newly orphaned process group.
.It
If the process is a controlling process (see
.Xr intro 2 ) ,
the
.Dv SIGHUP
signal is sent to the foreground process group of the controlling terminal,
and all current access to the controlling terminal is revoked.
.El
.Pp
Most C programs call the library routine
.Xr exit 3 ,
which flushes buffers, closes streams, unlinks temporary files, etc.,
and then calls
.Fn _exit .
.Sh RETURN VALUES
.Fn _exit
and
.Fn _Exit
can never return.
.Sh SEE ALSO
.Xr fork 2 ,
.Xr intro 2 ,
.Xr sigaction 2 ,
.Xr wait 2 ,
.Xr exit 3 ,
.Xr sysexits 3
.Sh STANDARDS
The
.Fn _exit
function conforms to
.St -p1003.1-2008 .
The
.Fn _Exit
function conforms to
.St -isoC-99 .
.Sh HISTORY
An
.Fn exit
system call first appeared in
.At v1 .
It accepts the
.Fa status
argument since
.At v2 .
An
.Fn _exit
variant first appeared in
.At v7 .
The
.Fn _Exit
function appeared in
.Ox 3.6 .
