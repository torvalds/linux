.\"	$OpenBSD: symlink.2,v 1.22 2021/01/03 18:10:27 rob Exp $
.\"	$NetBSD: symlink.2,v 1.7 1995/02/27 12:38:34 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)symlink.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: January 3 2021 $
.Dt SYMLINK 2
.Os
.Sh NAME
.Nm symlink ,
.Nm symlinkat
.Nd make symbolic link to a file
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn symlink "const char *name1" "const char *name2"
.In fcntl.h
.In unistd.h
.Ft int
.Fn symlinkat "const char *name1" "int fd" "const char *name2"
.Sh DESCRIPTION
A symbolic link
.Fa name2
is created to
.Fa name1
.Pf ( Fa name2
is the name of the
file created,
.Fa name1
is the string
used in creating the symbolic link).
Either name may be an arbitrary pathname; the files need not
be on the same file system, and the file specified by
.Fa name1
need not exist at all.
.Pp
The
.Fn symlinkat
function is equivalent to
.Fn symlink
except that where
.Fa name2
specifies a relative path,
the newly created symbolic link is created relative to
the directory associated with file descriptor
.Fa fd
instead of the current working directory.
.Pp
If
.Fn symlinkat
is passed the special value
.Dv AT_FDCWD
(defined in
.In fcntl.h )
in the
.Fa fd
parameter, the current working directory is used
and the behavior is identical to a call to
.Fn symlink .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The symbolic link will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the
.Fa name2
prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er EACCES
A component of the
.Fa name2
path prefix denies search permission.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EEXIST
.Fa name2
already exists.
.It Bq Er EIO
An I/O error occurred while making the directory entry for
.Fa name2 ,
or allocating the inode for
.Fa name2 ,
or writing out the link contents of
.Fa name2 .
.It Bq Er EROFS
The file
.Fa name2
would reside on a read-only file system.
.It Bq Er ENOSPC
The directory in which the entry for the new symbolic link is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.It Bq Er ENOSPC
The new symbolic link cannot be created because there
is no space left on the file
system that will contain the symbolic link.
.It Bq Er ENOSPC
There are no free inodes on the file system on which the
symbolic link is being created.
.It Bq Er EDQUOT
The directory in which the entry for the new symbolic link
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.It Bq Er EDQUOT
The new symbolic link cannot be created because the user's
quota of disk blocks on the file system that will
contain the symbolic link has been exhausted.
.It Bq Er EDQUOT
The user's quota of inodes on the file system on
which the symbolic link is being created has been exhausted.
.It Bq Er EIO
An I/O error occurred while making the directory entry or allocating the inode.
.It Bq Er EFAULT
.Fa name1
or
.Fa name2
points outside the process's allocated address space.
.El
.Pp
Additionally,
.Fn symlinkat
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa name2
argument specifies a relative path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er ENOTDIR
The
.Fa name2
argument specifies a relative path and the
.Fa fd
argument is a valid file descriptor but it does not reference a directory.
.It Bq Er EACCES
The
.Fa name2
argument specifies a relative path but search permission is denied
for the directory which the
.Fa fd
file descriptor references.
.El
.Sh SEE ALSO
.Xr ln 1 ,
.Xr link 2 ,
.Xr readlink 2 ,
.Xr unlink 2 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn symlink
and
.Fn symlinkat
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn symlink
system call first appeared in
.Bx 4.1c .
The
.Fn symlinkat
system call has been available since
.Ox 5.0 .
