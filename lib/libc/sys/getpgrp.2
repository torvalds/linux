.\"	$OpenBSD: getpgrp.2,v 1.19 2022/10/13 21:37:05 jmc Exp $
.\"	$NetBSD: getpgrp.2,v 1.8 1995/02/27 12:33:09 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpgrp.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: October 13 2022 $
.Dt GETPGRP 2
.Os
.Sh NAME
.Nm getpgrp ,
.Nm getpgid
.Nd get process group
.Sh SYNOPSIS
.In unistd.h
.Ft pid_t
.Fn getpgrp "void"
.Ft pid_t
.Fn getpgid "pid_t pid"
.Sh DESCRIPTION
The process group of the current process is returned by
.Fn getpgrp .
The process group of the
.Fa pid
process is returned by
.Fn getpgid .
If
.Fa pid
is zero,
.Fn getpgid
returns the process group of the current process.
.Pp
Process groups are used for distribution of signals, and
by terminals to arbitrate requests for their input: processes
that have the same process group as the terminal are foreground
and may read, while others will block with a signal if they attempt
to read.
.Pp
These calls are thus used by programs such as
.Xr csh 1
to create
process groups
in implementing job control.
The
.Fn tcgetpgrp
and
.Fn tcsetpgrp
calls are used to get/set the process group of the controlling terminal.
.Sh ERRORS
.Fn getpgrp
always succeeds, however
.Fn getpgid
will succeed unless:
.Bl -tag -width Er
.It Bq Er EPERM
The current process and the process
.Fa pid
are not in the same session.
.It Bq Er ESRCH
There is no process with a process ID equal to
.Fa pid .
.El
.Sh SEE ALSO
.Xr setpgid 2 ,
.Xr termios 4
.Sh STANDARDS
The
.Fn getpgrp
and
.Fn getpgid
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
A
.Fn getpgrp
function call that took a
.Fa "pid_t pid"
argument appeared in
.Bx 4.0 .
This version, without an argument, is derived from its usage in
System V Release 4, and first appeared in
.Nx 0.9 .
.Pp
The
.Fn getpgid
function call is derived from its usage in System V Release 4, and
first appeared in
.Nx 1.2a .
