.\"	$OpenBSD: fpclassify.3,v 1.6 2025/06/07 23:56:57 schwarze Exp $
.\"
.\" Copyright (c) 2003 Mike Barcroft <mike@FreeBSD.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/gen/fpclassify.3,v 1.6 2005/01/27 05:46:16 das Exp $
.\"
.Dd $Mdocdate: June 7 2025 $
.Dt FPCLASSIFY 3
.Os
.Sh NAME
.Nm fpclassify ,
.Nm isfinite ,
.Nm isinf ,
.Nm isnan ,
.Nm isnormal ,
.Nm signbit ,
.Nm finite ,
.Nm finitef ,
.Nm isinff ,
.Nm isnanf
.Nd classify a floating-point number
.Sh SYNOPSIS
.Lb libm
.In math.h
.Ft int
.Fn fpclassify "real-floating x"
.Ft int
.Fn isfinite "real-floating x"
.Ft int
.Fn isinf "real-floating x"
.Ft int
.Fn isnan "real-floating x"
.Ft int
.Fn isnormal "real-floating x"
.Ft int
.Fn signbit "real-floating x"
.Sh DESCRIPTION
The
.Fn fpclassify
macro takes an argument of
.Fa x
and returns one of the following manifest constants:
.Pp
.Bl -tag -width "FP_SUBNORMALXXX" -offset indent -compact
.It Dv FP_INFINITE
Indicates that
.Fa x
is an infinite number.
.It Dv FP_NAN
Indicates that
.Fa x
is not a number (NaN).
.It Dv FP_NORMAL
Indicates that
.Fa x
is a normalized number.
.It Dv FP_SUBNORMAL
Indicates that
.Fa x
is a denormalized number.
.It Dv FP_ZERO
Indicates that
.Fa x
is zero (0 or \-0).
.El
.Pp
The
.Fn isfinite
macro returns a non-zero value if and only if its argument has
a finite (zero, subnormal, or normal) value.
.Pp
The
.Fn isinf ,
.Fn isnan ,
and
.Fn isnormal
macros return non-zero if and only if
.Fa x
is an infinity, NaN,
or a non-zero normalized number, respectively.
.Pp
The
.Fn signbit
macro takes an argument of
.Fa x
and returns non-zero if the value of its sign is negative, otherwise 0.
.Sh SEE ALSO
.Xr isgreater 3
.Sh STANDARDS
The
.Fn fpclassify ,
.Fn isfinite ,
.Fn isinf ,
.Fn isnan ,
.Fn isnormal ,
and
.Fn signbit
macros conform to
.St -isoC-99 .
.Pp
The symbols
.Fn isinff ,
and
.Fn isnanf
are provided as compatibility aliases to
.Fn isinf ,
and
.Fn isnan ,
respectively, and their uses are deprecated.
Similarly,
.Fn finite
and
.Fn finitef
are deprecated versions of
.Fn isfinite .
.Sh HISTORY
The
.Fn fpclassify ,
.Fn isfinite ,
.Fn isinf ,
.Fn isnan ,
.Fn isnormal ,
and
.Fn signbit
macros were added in
.Ox 4.4 .
.Bx 3
introduced
.Fn isinf
and
.Fn isnan
functions, which accepted
.Vt double
arguments; these have been superseded by the macros
described above.
