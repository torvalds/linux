.\"	$OpenBSD: kvm_getfiles.3,v 1.20 2025/06/06 21:53:13 schwarze Exp $
.\"	$NetBSD: kvm_getfiles.3,v 1.3 1996/03/18 22:33:23 thorpej Exp $
.\"
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software developed by the Computer Systems
.\" Engineering group at Lawrence Berkeley Laboratory under DARPA contract
.\" BG 91-66 and contributed to Berkeley.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)kvm_getfiles.3	8.2 (Berkeley) 4/19/94
.\"
.Dd $Mdocdate: June 6 2025 $
.Dt KVM_GETFILES 3
.Os
.Sh NAME
.Nm kvm_getfiles
.Nd survey open files
.Sh SYNOPSIS
.Lb libkvm
.In kvm.h
.In sys/types.h
.In sys/sysctl.h
.Ft struct kinfo_file *
.Fn kvm_getfiles "kvm_t *kd" "int op" "int arg" "size_t elemsize" "int *cnt"
.Sh DESCRIPTION
.Fn kvm_getfiles
returns a (sub-)set of the open files in the kernel indicated by
.Fa kd .
The
.Fa op
and
.Fa arg
arguments constitute a predicate which limits the set of files
returned.
The value of
.Fa op
describes the filtering predicate as follows:
.Pp
.Bl -tag -width 20n -offset indent -compact
.It Dv KERN_FILE_BYFILE
all open files with type
.Fa arg
(0 for all files)
.It Dv KERN_FILE_BYPID
files opened by process ID
.Fa arg
(\-1 for all processes)
.It Dv KERN_FILE_BYUID
files opened by processes with effective user ID
.Fa arg
(\-1 for all users)
.El
.Pp
Files associated with a process will include information about
the process that has the file open.
.Pp
For
.Dv KERN_FILE_BYFILE
the recognized file types are defined in
.In sys/file.h :
.Pp
.Bl -tag -width 20n -offset indent -compact
.It Dv DTYPE_VNODE
files and devices
.It Dv DTYPE_SOCKET
sockets, regardless of domain
.It Dv DTYPE_PIPE
pipes and FIFOs
.It Dv DTYPE_KQUEUE
kqueues
.El
.Pp
Only the first
.Fa elemsize
bytes of each array entry are returned.
If the size of the
.Vt kinfo_file
structure increases in size in a future release of
.Ox ,
the kernel will only return the requested amount of data for
each array entry and programs that use
.Fn kvm_getfiles
will continue to function without the need for recompilation.
.Sh RETURN VALUES
The files are returned as a contiguous array of
.Vt kinfo_file
structures.
The number of structures found is returned in the reference parameter
.Fa cnt .
This memory is owned by kvm and will be overwritten by subsequent calls to
.Fn kvm_getfiles
and destroyed by
.Fn kvm_close .
Data should be copied out if it needs to be saved.
.Pp
.Fn kvm_getfiles
will return
.Dv NULL
on failure.
.Sh ERRORS
.Fn kvm_getfiles
will fail if:
.Bl -tag -width Er
.It Bq Er ENOMEM
Could not allocate enough memory for internal buffer.
.It Bq Er ESRCH
The
.Fa op
argument has
.Dv KERN_FILE_BYPID
value and the process specified by
.Fa arg
was not found.
.El
.Sh SEE ALSO
.Xr kvm 3 ,
.Xr kvm_geterr 3 ,
.Xr kvm_nlist 3 ,
.Xr kvm_open 3 ,
.Xr kvm_read 3
.Sh BUGS
This routine does not belong in the kvm interface.
